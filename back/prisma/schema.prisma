// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ApplicationStatus {
  PENDING
  APPROVED
  REJECTED
}

model Client {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  email              String              @unique
  age                Int
  income             Float
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  creditApplications CreditApplication[]
}

model CreditModality {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  name               String              @unique
  minAge             Int?
  maxAge             Int?
  minIncome          Float?
  maxIncome          Float?
  interestRate       Float? 
  interestType       String? 
  maxTermYears       Int
  adminFeePercentage Float? 
  description        String?
  isActive           Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  creditApplications CreditApplication[]
}

model FinancingLine {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  name               String              @unique
  propertyType       String
  description        String?
  disallowedModalityTypes String[] 
  isActive           Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  creditApplications CreditApplication[]
}

model CreditApplication {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  clientId         String         @db.ObjectId 
  client           Client         @relation(fields: [clientId], references: [id])
  creditModalityId String         @db.ObjectId 
  creditModality   CreditModality @relation(fields: [creditModalityId], references: [id])
  financingLineId  String         @db.ObjectId 
  financingLine    FinancingLine  @relation(fields: [financingLineId], references: [id])
  status           ApplicationStatus         @default(PENDING) 
  requestedAmount  Float?
  propertyValue Float?

  applicationDate  DateTime       @default(now())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

